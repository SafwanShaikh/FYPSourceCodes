
#from sklearn.neighbors import KNeighborsClassifier
#neigh = KNeighborsClassifier(n_neighbors=10)
#neigh.fit(X_train, Y_train)
#prediction = neigh.predict(X_test)
#prediction = prediction.ravel()
#from sklearn.metrics import accuracy_score
#print(accuracy_score(Y_test, prediction))
#print(accuracy_score(Y_test, prediction, normalize=False)) #If False, return the number of correctly classified samples. Otherwise, return the fraction of correctly classified samples.


#from sklearn import tree
#clf = tree.DecisionTreeClassifier()
#clf = clf.fit(X_train, Y_train)
#prediction = clf.predict(X_test)
#prediction = prediction.ravel()
#from sklearn.metrics import accuracy_score
#print(accuracy_score(Y_test, prediction))
#print(accuracy_score(Y_test, prediction, normalize=False)) #If False, return the number of correctly classified samples. Otherwise, return the fraction of correctly classified samples.
